# cargo
[tasks.install-cargo-tarpaulin]
command = "cargo"
args = ["install", "cargo-tarpaulin"]

[tasks.install-cargo-release]
command = "cargo"
args = ["install", "cargo-release"]

[tasks.fmt]
command = "cargo"
args = ["fmt"]

[tasks.fmt-check]
command = "cargo"
args = ["fmt", "--check"]

[tasks.lint]
command = "cargo"
args = ["clippy", "--all-targets", "--all-features", "--release"]

[tasks.deploy]
command = "cargo"
args = ["release", "${BUMP_LEVEL}", "--execute", "--no-confirm", "--no-verify"]

[tasks.deploy-dryrun]
command = "cargo"
args = ["release", "${BUMP_LEVEL}", "--no-confirm", "--no-verify"]

[tasks.deploy-patch]
env = { "BUMP_LEVEL" = "patch" }
run_task = "deploy"

[tasks.deploy-patch-dryrun]
env = { "BUMP_LEVEL" = "patch" }
run_task = "deploy-dryrun"


# git
[tasks.git-add-all]
command = "git"
args = ["add", "."]

[tasks.git-commit]
command = "git"
args = ["commit", "-m", "${COMMIT_MSG}"]

[tasks.git-commit-fmt]
env = { "COMMIT_MSG" = "style: reformat code with cargo fmt" }
run_task = "git-commit"

[tasks.git-commit-changelog]
env = { "COMMIT_MSG" = "git commit -m \"chore: update changelog\"" }
run_task = "git-commit"

[tasks.git-push]
command = "git"
args = ["push"]


# front tasks
[tasks.dev]
dependencies = ["install-cargo-tarpaulin", "install-cargo-release", "build"]

[tasks.fmt-commit]
dependencies = ["git-add-all", "git-commit-fmt", "git-push"]

[tasks.full-test]
run_task = { name = ["test", "lint", "fmt-check"], parallel = true }

[tasks.changelog]
dependencies = ["git-add-all", "git-commit-changelog", "git-push"]
