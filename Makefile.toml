# sandbox
[tasks.bump-trello-version]
script = '''
new_version=$(cat .version)
new_name="gitignore-template-generator+${new_version}"
key=$(cat "$TRELLO_API_KEY")
token=$(cat "$TRELLO_API_TOKEN")
curl -o /dev/null -s -X PUT "https://api.trello.com/1/boards/FZLDdiLN?name=${new_name}&key=${key}&token=${token}"
echo "Trello board version bumped to ${new_version}"
'''

[tasks.archive-trello-cards]
script = '''
key=$(cat "$TRELLO_API_KEY")
token=$(cat "$TRELLO_API_TOKEN")
card_ids=$(curl -s "https://api.trello.com/1/lists/68027d1040324003560f3169/cards?key=${key}&token=${token}" | jq -r '.[].id')
for card_id in $card_ids; do
  curl -o /dev/null -s -X PUT "https://api.trello.com/1/cards/${card_id}?idList=68027e5026b59f970b733488&key=${key}&token=${token}"
  echo "Moved card ${card_id} to History column"
done
'''

[tasks.rename-trello-cards]
script = '''
old_version=$(cat .version)
key=$(cat "$TRELLO_API_KEY")
token=$(cat "$TRELLO_API_TOKEN")
curl -s "https://api.trello.com/1/lists/68027d1040324003560f3169/cards?key=${key}&token=${token}" | jq -c '.[] | {id, name}' |
while read -r card; do
  card_name=$(echo "${card}" | jq -r '.name')
  card_id=$(echo "${card}" | jq -r '.id')
  url_encoded_card_name=$(jq -rn --arg v "$card_name" '$v|@uri')
  new_name="${old_version}+-+${url_encoded_card_name}"
  curl -o /dev/null -s -X PUT "https://api.trello.com/1/cards/${card_id}?name=${new_name}&idList=68027e5026b59f970b733488&key=${key}&token=${token}"
  echo "Renamed card ${card_id} with version specifier"
done
'''

[tasks.release]
run_task = [
    { name = [
        "rename-trello-cards",
        "deploy-args",
        "bump-trello-version",
        "archive-trello-cards",
    ] },
]

[tasks.release-dryrun]
run_task = [{ name = ["deploy-dryrun-args"] }]

[tasks.doc]
command = "cargo"
args = ["doc"]

# cargo
[tasks.install-git-cliff]
command = "cargo"
args = ["install", "git-cliff"]

[tasks.install-cargo-tarpaulin]
command = "cargo"
args = ["install", "cargo-tarpaulin"]

[tasks.install-cargo-release]
command = "cargo"
args = ["install", "cargo-release"]

[tasks.fmt]
command = "cargo"
args = ["fmt"]

[tasks.fmt-check]
command = "cargo"
args = ["fmt", "--check"]

[tasks.lint]
command = "cargo"
args = ["clippy", "--all-targets", "--all-features", "--release"]

[tasks.deploy]
command = "cargo"
args = ["release", "${BUMP_LEVEL}", "--execute", "--no-confirm", "--no-verify"]

[tasks.deploy-args]
command = "cargo"
args = ["release", "${@}", "--execute", "--no-confirm", "--no-verify"]


[tasks.deploy-dryrun]
command = "cargo"
args = ["release", "${BUMP_LEVEL}", "--no-confirm", "--no-verify"]

[tasks.deploy-dryrun-args]
command = "cargo"
args = ["release", "${@}", "--no-confirm", "--no-verify"]

[tasks.deploy-patch]
env = { "BUMP_LEVEL" = "patch" }
run_task = "deploy"

[tasks.deploy-patch-dryrun]
env = { "BUMP_LEVEL" = "patch" }
run_task = "deploy-dryrun"


# git
[tasks.git-add-all]
command = "git"
args = ["add", "."]

[tasks.git-add-changelog]
command = "git"
args = ["add", "CHANGELOG.md"]

[tasks.git-commit-fmt]
command = "git"
args = ["commit", "-m", "style: reformat code with cargo fmt"]

[tasks.git-commit-changelog]
command = "git"
args = ["commit", "-m", "chore(changelog): update file"]

[tasks.git-push]
command = "git"
args = ["push"]

[tasks.git-cliff]
command = "git"
args = [
    "cliff",
    "--unreleased",
    "-o",
    "CHANGELOG_SNAPSHOT.md",
    "--verbose",
    "--workdir",
    ".",
]


# miscellaneous
[tasks.bump-changelog]
script = [
    "sed '/./,$!d' CHANGELOG_SNAPSHOT.md | tac | sed '/./,$!d' | tac > tmp && mv tmp CHANGELOG_SNAPSHOT.md",
    "sed -i -e '/@Content/{r CHANGELOG_SNAPSHOT.md' -e 'd}' CHANGELOG.md",
    "rm CHANGELOG_SNAPSHOT.md",
]


# front tasks
[tasks.dev]
run_task = [
    { name = "install-git-cliff", fork = true },
    { name = "install-cargo-release", fork = true },
    { name = "install-cargo-tarpaulin", fork = true },
    { name = "build" },
]

[tasks.fmt-commit]
dependencies = ["git-add-all", "git-commit-fmt", "git-push"]

[tasks.full-test]
run_task = { name = ["test", "lint", "fmt-check"], parallel = true }

[tasks.changelog]
dependencies = ["git-cliff", "bump-changelog"]

[tasks.changelog-commit]
dependencies = ["git-add-changelog", "git-commit-changelog", "git-push"]
